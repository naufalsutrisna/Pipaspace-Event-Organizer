/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package proyekakhir.Admin;

import java.sql.Connection;
import java.util.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import proyekakhir.ConnectDB;

/**
 *
 * @author Bagas A
 */
public class Karyawan extends javax.swing.JPanel {

    DefaultTableModel tbl;
    Connection con = ConnectDB.getConnection();
    Statement s = null;
    ResultSet rs;
    boolean row_Is_Selected = false;
    int index = 0;
    DefaultTableModel nav;


    /**
     * Creates new form Karyawan
     */
    public Karyawan() {
        initComponents();
        TampilData();
        try {
            s = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = s.executeQuery("SELECT IDKaryawan, NIK, nama, alamat, noTelp, jenisKelamin, tanggalLahir, bidangKerja, gaji, IDTim FROM karyawan");
        } catch (Exception e) {
            // TODO: handle exception
        }
    }

    public void TampilData()
    {
        tbl = new DefaultTableModel();
        tbl.addColumn("ID Karyawan");
        tbl.addColumn("NIK");
        tbl.addColumn("Nama");
        tbl.addColumn("Alamat");
        tbl.addColumn("No. Telp");
        tbl.addColumn("Jenis Kelamin");
        tbl.addColumn("Tanggal Lahir");
        tbl.addColumn("Bidang");
        tbl.addColumn("Gaji");
        tbl.addColumn("ID Tim");
        tableKaryawan.setModel(tbl);
        
        try {
            java.sql.Statement statement = con.createStatement();
            String sql = "SELECT * FROM karyawan";
            java.sql.ResultSet result = statement.executeQuery(sql);
            while(result.next()) {
                tbl.addRow(new Object[] {
                    result.getString("IDKaryawan"),
                    result.getString("NIK"),
                    result.getString("nama"),
                    result.getString("alamat"),
                    result.getString("noTelp"),
                    result.getString("jenisKelamin"),
                    result.getString("tanggalLahir"),
                    result.getString("bidangKerja"),
                    result.getString("gaji"),
                    result.getString("IDTim"),
                });
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableKaryawan = new javax.swing.JTable();
        bLast = new javax.swing.JButton();
        bNext = new javax.swing.JButton();
        bFirst = new javax.swing.JButton();
        bPrev = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        inputID = new javax.swing.JTextField();
        inputNIK = new javax.swing.JTextField();
        inputNama = new javax.swing.JTextField();
        inputLahir = new com.toedter.calendar.JDateChooser();
        rbLaki = new javax.swing.JRadioButton();
        rbPerempuan = new javax.swing.JRadioButton();
        inputPhone = new javax.swing.JTextField();
        inputAlamat = new javax.swing.JTextField();
        inputBK = new javax.swing.JComboBox<>();
        inputGaji = new javax.swing.JTextField();
        inputIDTim = new javax.swing.JTextField();
        bSave = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        CBTipeData = new javax.swing.JComboBox<>();
        InputPencarian = new javax.swing.JTextField();
        JBCari = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1142, 521));

        jPanel1.setBackground(new java.awt.Color(204, 204, 0));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("INFORMASI KARYAWAN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(410, 410, 410)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        tableKaryawan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableKaryawan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableKaryawanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableKaryawan);

        bLast.setBackground(new java.awt.Color(153, 153, 153));
        bLast.setText(">>");
        bLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLastActionPerformed(evt);
            }
        });

        bNext.setBackground(new java.awt.Color(153, 153, 153));
        bNext.setText(">");
        bNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNextActionPerformed(evt);
            }
        });

        bFirst.setBackground(new java.awt.Color(153, 153, 153));
        bFirst.setText("<<");
        bFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFirstActionPerformed(evt);
            }
        });

        bPrev.setBackground(new java.awt.Color(153, 153, 153));
        bPrev.setText("<");
        bPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrevActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel2.setText("ID");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel3.setText("NIK");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel4.setText("Nama");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel5.setText("Tanggal Lahir");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel6.setText("Jenis Kelamin");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel7.setText("No. Telepon");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel8.setText("Alamat");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel9.setText("Bidang Kerja");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel10.setText("Gaji");

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel11.setText("ID Tim");

        inputLahir.setDateFormatString("yyyy-MM-dd");

        buttonGroup1.add(rbLaki);
        rbLaki.setText("Laki-laki");

        buttonGroup1.add(rbPerempuan);
        rbPerempuan.setText("Perempuan");

        inputBK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "Admin", "Public Relation", "Transkoper", "Acara", "Marketing", "Creative" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addComponent(inputID, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inputNIK, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(rbLaki)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rbPerempuan))
                            .addComponent(inputNama, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(inputLahir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputPhone)
                            .addComponent(inputAlamat)
                            .addComponent(inputBK, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputGaji)
                            .addComponent(inputIDTim))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(inputID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(inputNIK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputLahir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(rbLaki)
                    .addComponent(rbPerempuan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(inputPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(inputAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(inputBK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(inputGaji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(inputIDTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        bSave.setBackground(new java.awt.Color(153, 153, 153));
        bSave.setText("SAVE");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bCancel.setBackground(new java.awt.Color(153, 153, 153));
        bCancel.setText("CANCEL");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        bUpdate.setBackground(new java.awt.Color(153, 153, 153));
        bUpdate.setText("UPDATE");
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        bDelete.setBackground(new java.awt.Color(153, 153, 153));
        bDelete.setText("DELETE");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        CBTipeData.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "NIK", "Nama", "Tanggal Lahir", "Jenis Kelamin", "No Telp", "Alamat", "Bidang Kerja", "Gaji", "ID Tim" }));
        CBTipeData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // CBTipeDataActionPerformed(evt);
            }
        });

        // InputPencarian.addActionListener(new java.awt.event.ActionListener() {
        //     public void actionPerformed(java.awt.event.ActionEvent evt) {
        //         // InputPencarianActionPerformed(evt);
        //     }
        // });

        JBCari.setText("Cari");
        JBCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bSave, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(CBTipeData, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(InputPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JBCari)
                        .addGap(238, 238, 238))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(bFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bNext, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bLast, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(167, 167, 167))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CBTipeData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InputPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JBCari))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bSave)
                        .addComponent(bCancel)
                        .addComponent(bUpdate)
                        .addComponent(bDelete))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bLast)
                        .addComponent(bNext)
                        .addComponent(bFirst)
                        .addComponent(bPrev)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Tombol Last
    private void bLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLastActionPerformed
        tableKaryawan.changeSelection(tableKaryawan.getRowCount() - 1, 0, false, false);
        highlightMouseClicked();
    }//GEN-LAST:event_bLastActionPerformed

    // Tombol Next
    private void bNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNextActionPerformed
        int i = tableKaryawan.getSelectedRow();
        if (tableKaryawan.getRowCount() - 1 != i) {
            TableModel model = tableKaryawan.getModel();
            tableKaryawan.changeSelection(i+1, 0, false, false);
            highlightMouseClicked();
        }
    }//GEN-LAST:event_bNextActionPerformed
    
    // Tombol first
    private void bFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFirstActionPerformed
        tableKaryawan.changeSelection(0, 0, false, false);
        highlightMouseClicked();
    }//GEN-LAST:event_bFirstActionPerformed

    // Tombol Prev
    private void bPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrevActionPerformed
        int i = tableKaryawan.getSelectedRow();
        TableModel model = tableKaryawan.getModel();
        tableKaryawan.changeSelection(i-1, 0, false, false);
        highlightMouseClicked();
    }//GEN-LAST:event_bPrevActionPerformed

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        try {
            PreparedStatement statement = con.prepareStatement("INSERT INTO Karyawan (IDKaryawan, IDTim, NIK, nama, alamat, noTelp, jenisKelamin, tanggalLahir, bidangKerja, gaji) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
            
            statement.setString(1, inputID.getText());
            if(inputIDTim.getText().equals("")){
                statement.setString(2, null);
            }else{ 
                statement.setString(2, inputIDTim.getText());
            }
            statement.setString(3, inputNIK.getText());
            statement.setString(4, inputNama.getText());
            statement.setString(5, inputAlamat.getText());
            statement.setString(6, inputPhone.getText());
            if(rbLaki.isSelected()){
                statement.setString(7, "Laki-Laki");
            } else {
                statement.setString(7, "Perempuan");
            }
            // statement.setString(8, inputLahir.getDateFormatString());
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(inputLahir.getDate());
            statement.setString(8, date);
            if(inputBK.getSelectedItem().equals("Admin")) {
                statement.setString(9, "Admin");
            } else if(inputBK.getSelectedItem().equals("Public Relation")) {
                statement.setString(9, "Public Relation");
            } else if(inputBK.getSelectedItem().equals("Transkoper")) {
                statement.setString(9, "Transkoper");
            } else if(inputBK.getSelectedItem().equals("Acara")) {
                statement.setString(9, "Acara");
            } else if(inputBK.getSelectedItem().equals("Marketing")){ 
                statement.setString(9, "Marketing");
            } else if(inputBK.getSelectedItem().equals("Creative")) {
                statement.setString(9, "Creative");
            } else {
                JOptionPane.showMessageDialog(null, "Silahkan pilih bidang kerja yang tersedia!", "Warning", JOptionPane.INFORMATION_MESSAGE);
            }
            statement.setString(10, inputGaji.getText());

            statement.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            TampilData();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_bSaveActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        inputID.setText("");
        inputNIK.setText("");
        inputNama.setText("");
        inputLahir.setDate(new Date());
        inputAlamat.setText("");
        buttonGroup1.clearSelection();
        inputPhone.setText("");
        inputAlamat.setText("");
        inputBK.setSelectedIndex(0);
        inputGaji.setText("");
        inputIDTim.setText("");
        InputPencarian.setText("");
        TampilData();
    }//GEN-LAST:event_bCancelActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        try {
            PreparedStatement stmt = con.prepareStatement(
                "UPDATE karyawan SET NIK=?, nama=?, alamat=?, noTelp=?, jenisKelamin=?, tanggalLahir=?, bidangKerja=?, gaji=?, IDTim=? WHERE IDKaryawan=?");
            stmt.setString(1, inputNIK.getText());
            stmt.setString(2, inputNama.getText());
            stmt.setString(3, inputAlamat.getText());
            stmt.setString(4, inputPhone.getText());
            if(rbLaki.isSelected()){
                stmt.setString(5, "Laki-Laki");
            } else {
                stmt.setString(5, "Perempuan");
            }
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(inputLahir.getDate());
            stmt.setString(6, date);
            if(inputBK.getSelectedItem().equals("Admin")) {
                stmt.setString(7, "Admin");
            } else if(inputBK.getSelectedItem().equals("Public Relation")) {
                stmt.setString(7, "Public Relation");
            } else if(inputBK.getSelectedItem().equals("Transkoper")) {
                stmt.setString(7, "Transkoper");
            } else if(inputBK.getSelectedItem().equals("Acara")) {
                stmt.setString(7, "Acara");
            } else if(inputBK.getSelectedItem().equals("Marketing")){ 
                stmt.setString(7, "Marketing");
            } else if(inputBK.getSelectedItem().equals("Creative")) {
                stmt.setString(7, "Creative");
            }else {
                JOptionPane.showMessageDialog(null, "Silahkan pilih bidang kerja yang tersedia!", "Warning", JOptionPane.INFORMATION_MESSAGE);
            }
            stmt.setString(8, inputGaji.getText());
            if(inputIDTim.getText().equals("")){
                stmt.setString(9, null);
            }else{ 
                stmt.setString(9, inputIDTim.getText());
            }
            stmt.setString(10, inputID.getText());

            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil diubah", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            TampilData();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_bUpdateActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        try {
            // String gender ="";
            // if(rbLaki.isSelected()){
            //     gender = "Laki-Laki";
            // } else {
            //     gender = "Perempuan";
            // }
            // SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            // String date = sdf.format(inputLahir.getDate());
            PreparedStatement stmt = con.prepareStatement(
                "DELETE FROM karyawan WHERE IDKaryawan='" + inputID.getText() + "'");
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            inputID.setText("");
            inputNIK.setText("");
            inputNama.setText("");
            inputLahir.setDate(new Date());
            inputAlamat.setText("");
            buttonGroup1.clearSelection();
            inputPhone.setText("");
            inputAlamat.setText("");
            inputBK.setSelectedIndex(0);
            inputGaji.setText("");
            inputIDTim.setText("");
            TampilData();
        } catch (Exception e) {
            System.out.println("Error di sini");
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_bDeleteActionPerformed

    private void highlightMouseClicked() {
        int row = tableKaryawan.getSelectedRow();
        inputID.setText(tableKaryawan.getValueAt(row, 0).toString());
        inputNIK.setText(tableKaryawan.getValueAt(row, 1).toString());
        inputNama.setText(tableKaryawan.getValueAt(row, 2).toString());
        inputAlamat.setText(tableKaryawan.getValueAt(row, 3).toString());
        inputPhone.setText(tableKaryawan.getValueAt(row, 4).toString());
        if(tableKaryawan.getValueAt(row, 5).toString().equals("Laki-Laki")) {
            rbLaki.setSelected(true);
        } else {
            rbPerempuan.setSelected(true);
        }
        try {
            DefaultTableModel model = (DefaultTableModel) tableKaryawan.getModel();
            int tempRow = tableKaryawan.getSelectedRow();
            Date tgl = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(tempRow, 6));
            inputLahir.setDate(tgl);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        inputBK.setSelectedItem(tableKaryawan.getValueAt(row, 7).toString());
        inputGaji.setText(tableKaryawan.getValueAt(row, 8).toString());
        if (tableKaryawan.getValueAt(row, 9) == null) {
            inputIDTim.setText("");
        } else {
            inputIDTim.setText(tableKaryawan.getValueAt(row, 9).toString());
        }
    }

    private void tableKaryawanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableKaryawanMouseClicked
        int row = tableKaryawan.getSelectedRow();
        inputID.setText(tableKaryawan.getValueAt(row, 0).toString());
        inputNIK.setText(tableKaryawan.getValueAt(row, 1).toString());
        inputNama.setText(tableKaryawan.getValueAt(row, 2).toString());
        inputAlamat.setText(tableKaryawan.getValueAt(row, 3).toString());
        inputPhone.setText(tableKaryawan.getValueAt(row, 4).toString());
        if(tableKaryawan.getValueAt(row, 5).toString().equals("Laki-Laki")) {
            rbLaki.setSelected(true);
        } else {
            rbPerempuan.setSelected(true);
        }
        try {
            DefaultTableModel model = (DefaultTableModel) tableKaryawan.getModel();
            int tempRow = tableKaryawan.getSelectedRow();
            Date tgl = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(tempRow, 6));
            inputLahir.setDate(tgl);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        inputBK.setSelectedItem(tableKaryawan.getValueAt(row, 7).toString());
        inputGaji.setText(tableKaryawan.getValueAt(row, 8).toString());
        if (tableKaryawan.getValueAt(row, 9) == null) {
            inputIDTim.setText("");
        } else {
            inputIDTim.setText(tableKaryawan.getValueAt(row, 9).toString());
        }
    }//GEN-LAST:event_tableKaryawanMouseClicked

    // private void CBTipeDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBTipeDataActionPerformed
    //     // TODO add your handling code here:
    // }//GEN-LAST:event_CBTipeDataActionPerformed

    // private void InputPencarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputPencarianActionPerformed

    // }//GEN-LAST:event_InputPencarianActionPerformed

    private void JBCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCariActionPerformed
        tbl = new DefaultTableModel();
        tbl.addColumn("ID Karyawan");
        tbl.addColumn("NIK");
        tbl.addColumn("Nama");
        tbl.addColumn("Alamat");
        tbl.addColumn("No. Telp");
        tbl.addColumn("Jenis Kelamin");
        tbl.addColumn("Tanggal Lahir");
        tbl.addColumn("Bidang");
        tbl.addColumn("Gaji");
        tbl.addColumn("ID Tim");
        tableKaryawan.setModel(tbl);

        String sql = "";
        try {
            java.sql.Statement st = con.createStatement();
            if(CBTipeData.getSelectedItem().equals("ID")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE IDKaryawan LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE IDKaryawan LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM karyawan WHERE IDKaryawan LIKE '%" + input + "%'";
                }
            } else if (CBTipeData.getSelectedItem().equals("NIK")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE NIK LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE NIK LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM karyawan WHERE NIK LIKE '%" + input + "%'";
                }
            } else if (CBTipeData.getSelectedItem().equals("Nama")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE nama LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE nama LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM karyawan WHERE nama LIKE '%" + input + "%'";
                }
            } else if (CBTipeData.getSelectedItem().equals("Tanggal Lahir")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE tanggalLahir LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE tanggalLahir LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM karyawan WHERE tanggalLahir LIKE '%" + input + "%'";
                }
            }  else if (CBTipeData.getSelectedItem().equals("Jenis Kelamin")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE jenisKelamin LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE jenisKelamin LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM karyawan WHERE jenisKelamin LIKE '%" + input + "%'";
                }
            }  else if (CBTipeData.getSelectedItem().equals("No Telp")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE noTelp LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE noTelp LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM karyawan WHERE noTelp LIKE '%" + input + "%'";
                }
            }  else if (CBTipeData.getSelectedItem().equals("Alamat")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE alamat LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE alamat LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM karyawan WHERE alamat LIKE '%" + input + "%'";
                }
            }  else if (CBTipeData.getSelectedItem().equals("Bidang Kerja")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE bidangKerja LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE bidangKerja LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM karyawan WHERE bidangKerja LIKE '%" + input + "%'";
                }
            }  else if (CBTipeData.getSelectedItem().equals("Gaji")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE gaji LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM karyawan WHERE gaji LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM karyawan WHERE gaji LIKE '%" + input + "%'";
                }
            } else {
                sql = "SELECT * FROM karyawan WHERE IDTim LIKE '%" + InputPencarian.getText() + "%'";
            }

            java.sql.ResultSet res = st.executeQuery(sql);
            while (res.next()) {
                tbl.addRow(new Object[] {
                    res.getString("IDKaryawan"),
                    res.getString("NIK"),
                    res.getString("nama"),
                    res.getString("alamat"),
                    res.getString("noTelp"),
                    res.getString("jenisKelamin"),
                    res.getString("tanggalLahir"),
                    res.getString("bidangKerja"),
                    res.getString("gaji"),
                    res.getString("IDTim"),
                });
            }
            inputID.setText("");
            inputNIK.setText("");
            inputNama.setText("");
            inputLahir.setDate(new Date());
            inputAlamat.setText("");
            buttonGroup1.clearSelection();
            inputPhone.setText("");
            inputAlamat.setText("");
            inputBK.setSelectedIndex(0);
            inputGaji.setText("");
            inputIDTim.setText("");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_JBCariActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBTipeData;
    private javax.swing.JTextField InputPencarian;
    private javax.swing.JButton JBCari;
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bFirst;
    private javax.swing.JButton bLast;
    private javax.swing.JButton bNext;
    private javax.swing.JButton bPrev;
    private javax.swing.JButton bSave;
    private javax.swing.JButton bUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField inputAlamat;
    private javax.swing.JComboBox<String> inputBK;
    private javax.swing.JTextField inputGaji;
    private javax.swing.JTextField inputID;
    private javax.swing.JTextField inputIDTim;
    private com.toedter.calendar.JDateChooser inputLahir;
    private javax.swing.JTextField inputNIK;
    private javax.swing.JTextField inputNama;
    private javax.swing.JTextField inputPhone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbLaki;
    private javax.swing.JRadioButton rbPerempuan;
    private javax.swing.JTable tableKaryawan;
    // End of variables declaration//GEN-END:variables
}
