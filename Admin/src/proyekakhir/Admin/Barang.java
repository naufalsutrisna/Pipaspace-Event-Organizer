/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package proyekakhir.Admin;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import proyekakhir.ConnectDB;

/**
 *
 * @author Bagas A
 */
public class Barang extends javax.swing.JPanel {

    DefaultTableModel tbl;
    Connection con = ConnectDB.getConnection();
    Statement s = null;
    ResultSet rs;
    boolean row_Is_Selected = false;
    int index = 0;
    DefaultTableModel nav;

    /**
     * Creates new form Barang
     */
    public Barang() {
        initComponents();
        TampilData();
        try {
            s = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = s.executeQuery("SELECT kodeBarang, namaBarang, jenisBarang, hargaSatuan, namaVendor FROM Barang");
        } catch (Exception e) {
            // TODO: handle exception
        }
    }

    public void TampilData()
    {
        tbl = new DefaultTableModel();
        tbl.addColumn("Kode Barang");
        tbl.addColumn("Nama Barang");
        tbl.addColumn("Jenis Barang");
        tbl.addColumn("Harga Satuan");
        tbl.addColumn("Nama Vendor");
        tableBarang.setModel(tbl);
        
        try {
            java.sql.Statement statement = con.createStatement();
            String sql = "SELECT * FROM Barang";
            java.sql.ResultSet result = statement.executeQuery(sql);
            while(result.next()) {
                tbl.addRow(new Object[] {
                    result.getString("kodeBarang"),
                    result.getString("namaBarang"),
                    result.getString("jenisBarang"),
                    result.getString("hargaSatuan"),
                    result.getString("namaVendor")
                });
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        inputkodeBarang = new javax.swing.JTextField();
        inputnamaBarang = new javax.swing.JTextField();
        inputhargaSatuan = new javax.swing.JTextField();
        inputnamaVendor = new javax.swing.JTextField();
        inputjenisBarang = new javax.swing.JComboBox<>();
        bSave = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        CBTipeData = new javax.swing.JComboBox<>();
        InputPencarian = new javax.swing.JTextField();
        JBCari = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBarang = new javax.swing.JTable();
        bFirst1 = new javax.swing.JButton();
        bPrev1 = new javax.swing.JButton();
        bNext1 = new javax.swing.JButton();
        bLast1 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1142, 521));

        jPanel1.setBackground(new java.awt.Color(204, 204, 0));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("INFORMASI BARANG");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(445, 445, 445)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel2.setText("Kode Barang");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel3.setText("Nama Barang");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel4.setText("Jenis Barang");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel7.setText("Harga Satuan");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel8.setText("Nama Vendor");

        inputjenisBarang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "Makanan ", "Minuman ", "Kursi", "Meja", "Sofa", "Sound System", "Panggung", "Digital Printing", "Papan Bunga ", "Bunga", "Taplak Meja", "Balon", "Lampu", "Souvenir,", "Gaun" }));
        inputjenisBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // inputjenisBarangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inputkodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                        .addComponent(inputnamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputhargaSatuan)
                            .addComponent(inputnamaVendor)
                            .addComponent(inputjenisBarang, 0, 220, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(inputkodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(inputnamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(inputjenisBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputhargaSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputnamaVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        bSave.setBackground(new java.awt.Color(153, 153, 153));
        bSave.setText("SAVE");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bCancel.setBackground(new java.awt.Color(153, 153, 153));
        bCancel.setText("CANCEL");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        bUpdate.setBackground(new java.awt.Color(153, 153, 153));
        bUpdate.setText("UPDATE");
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        bDelete.setBackground(new java.awt.Color(153, 153, 153));
        bDelete.setText("DELETE");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        CBTipeData.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kode Barang", "Nama Barang", "Jenis Barang", "Harga Satuan", "Nama Vendor" }));
        CBTipeData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // CBTipeDataActionPerformed(evt);
            }
        });

        InputPencarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // InputPencarianActionPerformed(evt);
            }
        });

        JBCari.setText("Cari");
        JBCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCariActionPerformed(evt);
            }
        });

        tableBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableBarang);

        bFirst1.setBackground(new java.awt.Color(153, 153, 153));
        bFirst1.setText("<<");
        bFirst1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFirst1ActionPerformed(evt);
            }
        });

        bPrev1.setBackground(new java.awt.Color(153, 153, 153));
        bPrev1.setText("<");
        bPrev1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrev1ActionPerformed(evt);
            }
        });

        bNext1.setBackground(new java.awt.Color(153, 153, 153));
        bNext1.setText(">");
        bNext1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNext1ActionPerformed(evt);
            }
        });

        bLast1.setBackground(new java.awt.Color(153, 153, 153));
        bLast1.setText(">>");
        bLast1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLast1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bSave, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bFirst1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bPrev1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bNext1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bLast1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(178, 178, 178))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CBTipeData, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(InputPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JBCari))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bSave)
                            .addComponent(bCancel)
                            .addComponent(bUpdate)
                            .addComponent(bDelete)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CBTipeData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InputPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JBCari))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bLast1)
                            .addComponent(bNext1)
                            .addComponent(bFirst1)
                            .addComponent(bPrev1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        try {
            PreparedStatement statement = con.prepareStatement("INSERT INTO Barang (kodeBarang, namaBarang, jenisBarang, hargaSatuan, namaVendor) VALUES (?, ?, ?, ?, ?)");
            
            statement.setString(1, inputkodeBarang.getText());
            statement.setString(2, inputnamaBarang.getText());
            statement.setString(4, inputhargaSatuan.getText());
            statement.setString(5, inputnamaVendor.getText());

            if(inputjenisBarang.getSelectedItem().equals("Makanan")) {
                statement.setString(3, "Makanan");
            } else if(inputjenisBarang.getSelectedItem().equals("Minuman")) {
                statement.setString(3, "Minuman");
            } else if(inputjenisBarang.getSelectedItem().equals("Kursi")) {
                statement.setString(3, "Kursi");
            } else if(inputjenisBarang.getSelectedItem().equals("Meja")) {
                statement.setString(3, "Meja");
            } else if(inputjenisBarang.getSelectedItem().equals("Sofa")){ 
                statement.setString(3, "Sofa");
            } else if(inputjenisBarang.getSelectedItem().equals("Sound System")) {
                statement.setString(3, "Sound System");
            } else if(inputjenisBarang.getSelectedItem().equals("Panggung")) {
                statement.setString(3, "Panggung");
            } else if(inputjenisBarang.getSelectedItem().equals("Digital Printing")) {
                statement.setString(3, "Digital Printing");
            } else if(inputjenisBarang.getSelectedItem().equals("Papan Bunga")) {
                statement.setString(3, "Papan Bunga");
            } else if(inputjenisBarang.getSelectedItem().equals("Bunga")) {
                statement.setString(3, "Bunga");
            } else if(inputjenisBarang.getSelectedItem().equals("Taplak Meja")) {
                statement.setString(3, "Taplak Meja");
            } else if(inputjenisBarang.getSelectedItem().equals("Balon")) {
                statement.setString(3, "Balon");
            } else if(inputjenisBarang.getSelectedItem().equals("Lampu")) {
                statement.setString(3, "Lampu");
            } else if(inputjenisBarang.getSelectedItem().equals("Souvenir")) {
                statement.setString(3, "Souvenir");
            } else if(inputjenisBarang.getSelectedItem().equals("Gaun")) {
                statement.setString(3, "Gaun");
            }

            statement.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            TampilData();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_bSaveActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        inputkodeBarang.setText("");
        inputnamaBarang.setText("");
        buttonGroup1.clearSelection();
        inputhargaSatuan.setText("");
        inputnamaVendor.setText("");
        inputjenisBarang.setSelectedIndex(0);
        InputPencarian.setText("");
        TampilData();
    }//GEN-LAST:event_bCancelActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        try {
            PreparedStatement stmt = con.prepareStatement(
                "UPDATE barang SET namaBarang=?, jenisBarang=?, hargaSatuan=?, namaVendor=? WHERE kodeBarang=?");
            stmt.setString(1, inputnamaBarang.getText());
            if(inputjenisBarang.getSelectedItem().equals("Makanan")) {
                stmt.setString(2, "Makanan");
            } else if(inputjenisBarang.getSelectedItem().equals("Minuman")) {
                stmt.setString(2, "Minuman");
            } else if(inputjenisBarang.getSelectedItem().equals("Kursi")) {
                stmt.setString(2, "Kursi");
            } else if(inputjenisBarang.getSelectedItem().equals("Meja")) {
                stmt.setString(2, "Meja");
            } else if(inputjenisBarang.getSelectedItem().equals("Sofa")){ 
                stmt.setString(2, "Sofa");
            } else if(inputjenisBarang.getSelectedItem().equals("Sound System")) {
                stmt.setString(2, "Sound System");
            } else if(inputjenisBarang.getSelectedItem().equals("Panggung")) {
                stmt.setString(2, "Panggung");
            } else if(inputjenisBarang.getSelectedItem().equals("Digital Printing")) {
                stmt.setString(2, "Digital Printing");
            } else if(inputjenisBarang.getSelectedItem().equals("Papan Bunga")) {
                stmt.setString(2, "Papan Bunga");
            } else if(inputjenisBarang.getSelectedItem().equals("Bunga")) {
                stmt.setString(2, "Bunga");
            } else if(inputjenisBarang.getSelectedItem().equals("Taplak Meja")) {
                stmt.setString(2, "Taplak Meja");
            } else if(inputjenisBarang.getSelectedItem().equals("Balon")) {
                stmt.setString(2, "Balon");
            } else if(inputjenisBarang.getSelectedItem().equals("Lampu")) {
                stmt.setString(2, "Lampu");
            } else if(inputjenisBarang.getSelectedItem().equals("Souvenir")) {
                stmt.setString(2, "Souvenir");
            } else if(inputjenisBarang.getSelectedItem().equals("Gaun")) {
                stmt.setString(2, "Gaun");
            }else {
                JOptionPane.showMessageDialog(null, "Silahkan pilih bidang kerja yang tersedia!", "Warning", JOptionPane.INFORMATION_MESSAGE);
            }
            stmt.setString(3, inputhargaSatuan.getText());
            stmt.setString(4, inputnamaVendor.getText());
            stmt.setString(5, inputkodeBarang.getText());
            
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil diubah", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            TampilData();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_bUpdateActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        try {
            // String gender ="";
            // if(rbLaki.isSelected()){
            //     gender = "Laki-Laki";
            // } else {
            //     gender = "Perempuan";
            // }
            // SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            // String date = sdf.format(inputLahir.getDate());
            PreparedStatement stmt = con.prepareStatement(
                "DELETE FROM Barang WHERE kodeBarang='" + inputkodeBarang.getText() + "'"
                + "AND namaBarang='" + inputnamaBarang.getText() + "'"
                + "AND jenisBarang='" + inputjenisBarang.getSelectedItem()+ "'"
                + "AND hargaSatuan='" + inputhargaSatuan.getText()+ "'"
                + "AND namaVendor='" + inputnamaVendor.getText()+ "'");
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            inputkodeBarang.setText("");
            inputnamaBarang.setText("");
            inputjenisBarang.setSelectedIndex(0);
            inputhargaSatuan.setText("");
            inputnamaVendor.setText("");
            buttonGroup1.clearSelection();
            TampilData();
        } catch (Exception e) {
            System.out.println("Error di sini");
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_bDeleteActionPerformed
    private void highlightMouseClicked() {
        int row = tableBarang.getSelectedRow();
        inputkodeBarang.setText(tableBarang.getValueAt(row, 0).toString());
        inputnamaBarang.setText(tableBarang.getValueAt(row, 1).toString());
        inputhargaSatuan.setText(tableBarang.getValueAt(row, 3).toString());
        inputnamaVendor.setText(tableBarang.getValueAt(row, 4).toString());
        inputjenisBarang.setSelectedItem(tableBarang.getValueAt(row, 2).toString()); 
    }
    
    // private void inputjenisBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputjenisBarangActionPerformed
    //     // TODO add your handling code here:
    // }//GEN-LAST:event_inputjenisBarangActionPerformed

    // private void CBTipeDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBTipeDataActionPerformed
    //     //     // TODO add your handling code here:
    // }//GEN-LAST:event_CBTipeDataActionPerformed

    // private void InputPencarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputPencarianActionPerformed

    // }//GEN-LAST:event_InputPencarianActionPerformed

    private void JBCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCariActionPerformed
        tbl = new DefaultTableModel();
        tbl.addColumn("Kode Barang");
        tbl.addColumn("Nama Barang");
        tbl.addColumn("Jenis Barang");
        tbl.addColumn("Harga Satuan");
        tbl.addColumn("Nama Vendor");
        tableBarang.setModel(tbl);

        String sql = "";
        try {
            java.sql.Statement st = con.createStatement();
            if(CBTipeData.getSelectedItem().equals("Kode Barang")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Barang WHERE kodeBarang LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Barang WHERE kodeBarang LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Barang WHERE kodeBarang LIKE '%" + input + "%'";
                }
            } else if (CBTipeData.getSelectedItem().equals("Nama Barang")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Barang WHERE namaBarang LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Barang WHERE namaBarang LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Barang WHERE namaBarang LIKE '%" + input + "%'";
                }
            } else if (CBTipeData.getSelectedItem().equals("Jenis Barang")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Barang WHERE jenisBarang LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Barang WHERE jenisBarang LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Barang WHERE jenisBarang LIKE '%" + input + "%'";
                }
            } else if (CBTipeData.getSelectedItem().equals("Harga Satuan")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Barang WHERE hargaSatuan LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Barang WHERE hargaSatuan LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Barang WHERE hargaSatuan LIKE '%" + input + "%'";
                }
            } else {
                sql = "SELECT * FROM Barang WHERE namaVendor LIKE '%" + InputPencarian.getText() + "%'";
            }

            java.sql.ResultSet res = st.executeQuery(sql);
            while (res.next()) {
                tbl.addRow(new Object[] {
                    res.getString("kodeBarang"),
                    res.getString("namaBarang"),
                    res.getString("jenisBarang"),
                    res.getString("hargaSatuan"),
                    res.getString("namaVendor")
                });
            }
            inputkodeBarang.setText("");
            inputnamaBarang.setText("");
            buttonGroup1.clearSelection();
            inputhargaSatuan.setText("");
            inputnamaVendor.setText("");
            inputjenisBarang.setSelectedIndex(0);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_JBCariActionPerformed

    private void tableBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBarangMouseClicked
        int row = tableBarang.getSelectedRow();
        inputkodeBarang.setText(tableBarang.getValueAt(row, 0).toString());
        inputnamaBarang.setText(tableBarang.getValueAt(row, 1).toString());
        inputhargaSatuan.setText(tableBarang.getValueAt(row, 3).toString());
        inputnamaVendor.setText(tableBarang.getValueAt(row, 4).toString());
        inputjenisBarang.setSelectedItem(tableBarang.getValueAt(row, 2).toString()); 
    }//GEN-LAST:event_tableBarangMouseClicked

    private void bFirst1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFirst1ActionPerformed
        tableBarang.changeSelection(0, 0, false, false);
        highlightMouseClicked();
    }//GEN-LAST:event_bFirst1ActionPerformed

    private void bPrev1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrev1ActionPerformed
        int i = tableBarang.getSelectedRow();
        TableModel model = tableBarang.getModel();
        tableBarang.changeSelection(i-1, 0, false, false);
        highlightMouseClicked();
    }//GEN-LAST:event_bPrev1ActionPerformed

    private void bNext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNext1ActionPerformed
        int i = tableBarang.getSelectedRow();
        if (tableBarang.getRowCount() - 1 != i) {
            TableModel model = tableBarang.getModel();
            tableBarang.changeSelection(i+1, 0, false, false);
            highlightMouseClicked();
        }
    }//GEN-LAST:event_bNext1ActionPerformed

    private void bLast1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLast1ActionPerformed
        tableBarang.changeSelection(tableBarang.getRowCount() - 1, 0, false, false);
        highlightMouseClicked();
    }//GEN-LAST:event_bLast1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBTipeData;
    private javax.swing.JTextField InputPencarian;
    private javax.swing.JButton JBCari;
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bFirst1;
    private javax.swing.JButton bLast1;
    private javax.swing.JButton bNext1;
    private javax.swing.JButton bPrev1;
    private javax.swing.JButton bSave;
    private javax.swing.JButton bUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField inputhargaSatuan;
    private javax.swing.JComboBox<String> inputjenisBarang;
    private javax.swing.JTextField inputkodeBarang;
    private javax.swing.JTextField inputnamaBarang;
    private javax.swing.JTextField inputnamaVendor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableBarang;
    // End of variables declaration//GEN-END:variables
}
