/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package proyekakhir.Admin;

import java.io.File;
import java.sql.Connection;
import java.util.Date;
import java.util.HashMap;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import proyekakhir.ConnectDB;

/**
 *
 * @author Bagas A
 */
public class Pesanan extends javax.swing.JPanel {

    DefaultTableModel tbl;
    Connection con = ConnectDB.getConnection();
    Statement s = null;
    ResultSet rs;
    boolean row_Is_Selected = false;
    int index = 0;
    DefaultTableModel nav;

    /**
     * Creates new form Pesanan
     */
    public Pesanan() {
        initComponents();
        TampilData();
        try {
            s = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = s.executeQuery("SELECT kodePesanan, tanggalPemesanan, namaAcara, waktuPelaksanaan, lokasiPelaksanaan, permintaanTambahan, biayaTambahan, IDTim, username, IDAcara FROM Pesanan");
        } catch (Exception e) {
            // TODO: handle exception
        }
    }

    public void TampilData()
    {
        tbl = new DefaultTableModel();
        tbl.addColumn("Kode Pesanan");
        tbl.addColumn("Tanggal Pemesanan");
        tbl.addColumn("Nama");
        tbl.addColumn("Waktu Pelaksanaan");
        tbl.addColumn("Lokasi");
        tbl.addColumn("Permintaan Tambahan");
        tbl.addColumn("Biaya Tambahan");
        tbl.addColumn("ID Tim");
        tbl.addColumn("Username");
        tbl.addColumn("ID Acara");
        tablePesanan.setModel(tbl);
        
        try {
            java.sql.Statement statement = con.createStatement();
            String sql = "SELECT * FROM Pesanan";
            java.sql.ResultSet result = statement.executeQuery(sql);
            while(result.next()) {
                tbl.addRow(new Object[] {
                    result.getString("kodePesanan"),
                    result.getString("tanggalPemesanan"),
                    result.getString("namaAcara"),
                    result.getString("waktuPelaksanaan"),
                    result.getString("lokasiPelaksanaan"),
                    result.getString("permintaanTambahan"),
                    result.getString("biayaTambahan"),
                    result.getString("IDTim"),
                    result.getString("Username"),
                    result.getString("IDAcara"),
                });
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        inputKodePesanan = new javax.swing.JTextField();
        inputNama = new javax.swing.JTextField();
        inputTanggalPemesanan = new com.toedter.calendar.JDateChooser();
        inputLokasi = new javax.swing.JTextField();
        inputIDTim = new javax.swing.JTextField();
        inputIDAcara = new javax.swing.JTextField();
        inputPermintaanTambahan = new javax.swing.JTextField();
        inputWaktuPelaksanaan = new com.toedter.calendar.JDateChooser();
        inputUsername = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        inputBiayaTambahan = new javax.swing.JTextField();
        bSave = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePesanan = new javax.swing.JTable();
        JBCari = new javax.swing.JButton();
        InputPencarian = new javax.swing.JTextField();
        CBTipeData = new javax.swing.JComboBox<>();
        bFirst1 = new javax.swing.JButton();
        bPrev1 = new javax.swing.JButton();
        bNext1 = new javax.swing.JButton();
        bLast1 = new javax.swing.JButton();
        pReport = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1142, 521));

        jPanel1.setBackground(new java.awt.Color(204, 204, 0));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("INFORMASI PESANAN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(410, 410, 410)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel2.setText("Kode Pesanan");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel3.setText("Tanggal Pemesanan");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel4.setText("Nama Acara");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel5.setText("Permintaan Tambahan");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel6.setText("Waktu Pelaksanaan");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel7.setText("Lokasi");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel8.setText("ID Tim");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel9.setText("Username");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel10.setText("ID Acara");

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel11.setText("Biaya Tambahan");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inputKodePesanan, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(inputTanggalPemesanan, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputNama, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(inputIDTim)
                            .addComponent(inputIDAcara)
                            .addComponent(inputUsername)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inputWaktuPelaksanaan, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(inputBiayaTambahan))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputLokasi)
                            .addComponent(inputPermintaanTambahan))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(inputKodePesanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputTanggalPemesanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(inputNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(inputWaktuPelaksanaan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputLokasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(inputPermintaanTambahan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(inputBiayaTambahan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputIDTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputIDAcara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        bSave.setBackground(new java.awt.Color(153, 153, 153));
        bSave.setText("SAVE");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bCancel.setBackground(new java.awt.Color(153, 153, 153));
        bCancel.setText("CANCEL");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        bUpdate.setBackground(new java.awt.Color(153, 153, 153));
        bUpdate.setText("UPDATE");
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        bDelete.setBackground(new java.awt.Color(153, 153, 153));
        bDelete.setText("DELETE");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        tablePesanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablePesanan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePesananMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablePesanan);

        JBCari.setText("Cari");
        JBCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCariActionPerformed(evt);
            }
        });

        InputPencarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // InputPencarianActionPerformed(evt);
            }
        });

        CBTipeData.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kode Pesanan", "Tanggal Pemesanan", "Nama Acara", "Waktu Pelaksanaan", "Lokasi", "Permintaan Tambahan", "Biaya Tambahan", "ID Tim", "Username", "ID Acara" }));
        CBTipeData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // CBTipeDataActionPerformed(evt);
            }
        });

        bFirst1.setBackground(new java.awt.Color(153, 153, 153));
        bFirst1.setText("<<");
        bFirst1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFirst1ActionPerformed(evt);
            }
        });

        bPrev1.setBackground(new java.awt.Color(153, 153, 153));
        bPrev1.setText("<");
        bPrev1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrev1ActionPerformed(evt);
            }
        });

        bNext1.setBackground(new java.awt.Color(153, 153, 153));
        bNext1.setText(">");
        bNext1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNext1ActionPerformed(evt);
            }
        });

        bLast1.setBackground(new java.awt.Color(153, 153, 153));
        bLast1.setText(">>");
        bLast1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLast1ActionPerformed(evt);
            }
        });

        pReport.setText("Report");
        pReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bSave, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bFirst1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bPrev1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bNext1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bLast1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(178, 178, 178))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CBTipeData, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(InputPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JBCari))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(104, 104, 104))
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(pReport)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bSave)
                            .addComponent(bUpdate)
                            .addComponent(bCancel)
                            .addComponent(bDelete)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CBTipeData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(InputPencarian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JBCari))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bLast1)
                            .addComponent(bNext1)
                            .addComponent(bFirst1)
                            .addComponent(bPrev1))))
                .addGap(18, 18, 18)
                .addComponent(pReport)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        try {
            PreparedStatement statement = con.prepareStatement("INSERT INTO Pesanan (kodePesanan, tanggalPemesanan, namaAcara, waktuPelaksanaan, lokasiPelaksanaan, permintaanTambahan, biayaTambahan, IDTim , username, IDAcara) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
            
            statement.setString(1, inputKodePesanan.getText());
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(inputTanggalPemesanan.getDate());
            statement.setString(2, date);
            statement.setString(3, inputNama.getText());
            
            SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
            String date2 = sdf2.format(inputWaktuPelaksanaan.getDate());
            statement.setString(4, date2);
            statement.setString(5, inputLokasi.getText());
            statement.setString(6, inputPermintaanTambahan.getText());
            statement.setString(7, inputBiayaTambahan.getText());
            statement.setString(8, inputIDTim.getText());
            statement.setString(9, inputUsername.getText());
            statement.setString(10, inputIDAcara.getText());

            statement.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            TampilData();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_bSaveActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        inputKodePesanan.setText("");
        inputTanggalPemesanan.setDate(new Date());
        inputNama.setText("");
        inputWaktuPelaksanaan.setDate(new Date());
        inputLokasi.setText("");
        inputPermintaanTambahan.setText("");
        inputBiayaTambahan.setText("");
        inputIDTim.setText("");
        inputUsername.setText("");
        inputIDAcara.setText("");
        buttonGroup1.clearSelection();
        InputPencarian.setText("");
        TampilData();
    }//GEN-LAST:event_bCancelActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        try {
            PreparedStatement stmt = con.prepareStatement(
                "UPDATE Pesanan SET kodePesanan=?, tanggalPemesanan=?, namaAcara=?, waktuPelaksanaan=?, lokasiPelaksanaan=?, permintaanTambahan=?, biayaTambahan=?, IDTim=?, username=?, IDAcara=? WHERE kodePesanan=?");
            stmt.setString(1, inputKodePesanan.getText());
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(inputTanggalPemesanan.getDate());
            stmt.setString(2, date);
            stmt.setString(3, inputNama.getText());
            
            SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
            String date2 = sdf2.format(inputWaktuPelaksanaan.getDate());
            stmt.setString(4, date2);
            stmt.setString(5, inputLokasi.getText());
            stmt.setString(6, inputPermintaanTambahan.getText());
            stmt.setString(7, inputBiayaTambahan.getText());
            stmt.setString(8, inputIDTim.getText());
            stmt.setString(9, inputUsername.getText());
            stmt.setString(10,inputIDAcara.getText());
            stmt.setString(11,inputKodePesanan.getText());

            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil diubah", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            TampilData();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_bUpdateActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        try {
            PreparedStatement stmt = con.prepareStatement(
                "DELETE FROM Pesanan WHERE kodePesanan='" + inputKodePesanan.getText() + "'");
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            inputKodePesanan.setText("");
            inputTanggalPemesanan.setDate(new Date());
            inputNama.setText("");
            inputWaktuPelaksanaan.setDate(new Date());
            inputLokasi.setText("");
            inputPermintaanTambahan.setText("");
            inputBiayaTambahan.setText("");
            inputIDTim.setText("");
            inputUsername.setText("");
            inputIDAcara.setText("");
            buttonGroup1.clearSelection();
            TampilData();
        } catch (Exception e) {
            System.out.println("Error di sini");
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_bDeleteActionPerformed

    private void tablePesananMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePesananMouseClicked
        int row = tablePesanan.getSelectedRow();
        inputKodePesanan.setText(tablePesanan.getValueAt(row, 0).toString());
        
        try {
            DefaultTableModel model = (DefaultTableModel) tablePesanan.getModel();
            int tempRow = tablePesanan.getSelectedRow();
            Date tgl = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(tempRow, 1));
            inputTanggalPemesanan.setDate(tgl);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        
        inputNama.setText(tablePesanan.getValueAt(row, 2).toString());
        
        try {
            DefaultTableModel model = (DefaultTableModel) tablePesanan.getModel();
            int tempRow = tablePesanan.getSelectedRow();
            Date tgl = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(tempRow, 3));
            inputWaktuPelaksanaan.setDate(tgl);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }

        if(tablePesanan.getValueAt(row, 4).toString() == null || tablePesanan.getValueAt(row, 4).toString() == "") {
            inputLokasi.setText("");
        } else {
            inputLokasi.setText(tablePesanan.getValueAt(row, 4).toString());
        }

        if(tablePesanan.getValueAt(row, 5) == null) {
            inputPermintaanTambahan.setText("");
        } else {
            inputPermintaanTambahan.setText(tablePesanan.getValueAt(row, 5).toString());
        }

        if(tablePesanan.getValueAt(row, 6).toString() == null || tablePesanan.getValueAt(row, 6).toString() == "") {
            inputBiayaTambahan.setText("");
        } else {
            inputBiayaTambahan.setText(tablePesanan.getValueAt(row, 6).toString());
        }
        
        if (tablePesanan.getValueAt(row, 7).toString() == null || tablePesanan.getValueAt(row, 7).toString() == "") {
            
        } else {
            inputIDTim.setText(tablePesanan.getValueAt(row, 7).toString());
        }
        
        if (tablePesanan.getValueAt(row, 8).toString() == null || tablePesanan.getValueAt(row, 8).toString() == "") {
            
        } else {
            inputUsername.setText(tablePesanan.getValueAt(row, 8).toString());
        }

        if(tablePesanan.getValueAt(row, 9).toString() == null || tablePesanan.getValueAt(row, 9).toString() == "") {
            inputIDAcara.setText("");
        } else {
            inputIDAcara.setText(tablePesanan.getValueAt(row, 9).toString());
        }
    }//GEN-LAST:event_tablePesananMouseClicked

    private void JBCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCariActionPerformed
        tbl = new DefaultTableModel();
        tbl.addColumn("Kode Pesanan");
        tbl.addColumn("Tanggal Pemesanan");
        tbl.addColumn("Nama");
        tbl.addColumn("Waktu Pelaksanaan");
        tbl.addColumn("Lokasi");
        tbl.addColumn("Permintaan Tambahan");
        tbl.addColumn("Biaya Tambahan");
        tbl.addColumn("ID Tim");
        tbl.addColumn("Username");
        tbl.addColumn("ID Acara");
        tablePesanan.setModel(tbl);

        String sql = "";
        try {
            java.sql.Statement st = con.createStatement();
            if(CBTipeData.getSelectedItem().equals("Kode Pesanan")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE kodePesanan LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE kodePesanan LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Pesanan WHERE kodePesanan LIKE '%" + input + "%'";
                }
            } else if (CBTipeData.getSelectedItem().equals("Tanggal Pemesanan")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE tanggalPemesanan LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE tanggalPemesanan LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Pesanan WHERE tanggalPemesanan LIKE '%" + input + "%'";
                }
            }  else if (CBTipeData.getSelectedItem().equals("Nama Acara")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE namaAcara LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE namaAcara LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Pesanan WHERE namaAcara LIKE '%" + input + "%'";
                }
            }  else if (CBTipeData.getSelectedItem().equals("Waktu Pelaksanaan")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE waktuPelaksanaan LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE waktuPelaksanaan LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Pesanan WHERE waktuPelaksanaan LIKE '%" + input + "%'";
                }
            }  else if (CBTipeData.getSelectedItem().equals("Lokasi")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE lokasiPelaksanaan LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE lokasiPelaksanaan LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Pesanan WHERE lokasiPelaksanaan LIKE '%" + input + "%'";
                }
            }  else if (CBTipeData.getSelectedItem().equals("Permintaan Tambahan")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE permintaanTambahan LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE permintaanTambahan LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Pesanan WHERE permintaanTambahan LIKE '%" + input + "%'";
                }
            }  else if (CBTipeData.getSelectedItem().equals("Biaya Tambahan")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE biayaTambahan LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE biayaTambahan LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Pesanan WHERE biayaTambahan LIKE '%" + input + "%'";
                }
            }  else if (CBTipeData.getSelectedItem().equals("ID Tim")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE IDTim LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE IDTim LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Pesanan WHERE IDTim LIKE '%" + input + "%'";
                }
            }  else if (CBTipeData.getSelectedItem().equals("Username")) {
                String input = InputPencarian.getText();
                if (input.substring(input.length() - 1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE username LIKE '" + input.replace("%", "") + "%'";
                } else if (input.substring(0,1).equals("%")) {
                    sql = "SELECT * FROM Pesanan WHERE username LIKE '%" + input.replace("%", "") + "'";
                } else if (input.contains(input)) {
                    sql = "SELECT * FROM Pesanan WHERE username LIKE '%" + input + "%'";
                }
            } else {
                sql = "SELECT * FROM Pesanan WHERE IDAcara LIKE '%" + InputPencarian.getText() + "%'";
            }

            java.sql.ResultSet res = st.executeQuery(sql);
            while (res.next()) {
                tbl.addRow(new Object[] {
                    res.getString("kodePesanan"),
                    res.getString("tanggalPemesanan"),
                    res.getString("namaAcara"),
                    res.getString("waktuPelaksanaan"),
                    res.getString("lokasiPelaksanaan"),
                    res.getString("permintaanTambahan"),
                    res.getString("biayaTambahan"),
                    res.getString("IDTim"),
                    res.getString("Username"),
                    res.getString("IDAcara"),
                });
            }
            inputKodePesanan.setText("");
            inputTanggalPemesanan.setDate(new Date());
            inputNama.setText("");
            inputWaktuPelaksanaan.setDate(new Date());
            inputLokasi.setText("");
            inputPermintaanTambahan.setText("");
            inputBiayaTambahan.setText("");
            inputIDTim.setText("");
            inputUsername.setText("");
            inputIDAcara.setText("");
            buttonGroup1.clearSelection();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_JBCariActionPerformed

    // private void InputPencarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputPencarianActionPerformed

    // }//GEN-LAST:event_InputPencarianActionPerformed

    // private void CBTipeDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBTipeDataActionPerformed
    //     //     // TODO add your handling code here:
    // }//GEN-LAST:event_CBTipeDataActionPerformed

    private void bFirst1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFirst1ActionPerformed
        tablePesanan.changeSelection(0, 0, false, false);
        highlightMouseClicked();
    }//GEN-LAST:event_bFirst1ActionPerformed

    private void bPrev1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrev1ActionPerformed
        int i = tablePesanan.getSelectedRow();
        TableModel model = tablePesanan.getModel();
        tablePesanan.changeSelection(i-1, 0, false, false);
        highlightMouseClicked();
    }//GEN-LAST:event_bPrev1ActionPerformed

    private void bNext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNext1ActionPerformed
        int i = tablePesanan.getSelectedRow();
        if (tablePesanan.getRowCount() - 1 != i) {
            TableModel model = tablePesanan.getModel();
            tablePesanan.changeSelection(i+1, 0, false, false);
            highlightMouseClicked();
        }
    }//GEN-LAST:event_bNext1ActionPerformed

    private void bLast1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLast1ActionPerformed
        tablePesanan.changeSelection(tablePesanan.getRowCount() - 1, 0, false, false);
        highlightMouseClicked();
    }//GEN-LAST:event_bLast1ActionPerformed

    private void pReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pReportActionPerformed
        // if(inputKodePesanan.getText() == "" || inputKodePesanan.getText() == null) {
        //     JOptionPane.showMessageDialog(null, "Harus mengisi kode pesanan!", "Error", JOptionPane.ERROR_MESSAGE);
        // } else {
        //     try {
                
        // }
        try {
            String namaFile = "C:\\Users\\Bagas A\\Documents\\NetBeansProjects\\full\\FE\\src\\reports\\NotaPembelian.jrxml";
                HashMap parameter = new HashMap();
                
                System.out.println("siap");
                parameter.put("pkp", inputKodePesanan.getText());
                System.out.println("kelar naro param");
                File reportFile = new File(namaFile);
                System.out.println("buat file br");
                JasperReport jasperReport = JasperCompileManager.compileReport(reportFile.getPath());
                System.out.println("buat jasperreport");
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameter, con);
                System.out.println("buat jsprint");
                JasperViewer.viewReport(jasperPrint, false);
                System.out.println("selese");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_pReportActionPerformed
    
    private void highlightMouseClicked() {
        int row = tablePesanan.getSelectedRow();
        inputKodePesanan.setText(tablePesanan.getValueAt(row, 0).toString());
        
        try {
            DefaultTableModel model = (DefaultTableModel) tablePesanan.getModel();
            int tempRow = tablePesanan.getSelectedRow();
            Date tgl = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(tempRow, 1));
            inputTanggalPemesanan.setDate(tgl);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        
        inputNama.setText(tablePesanan.getValueAt(row, 2).toString());
        
        try {
            DefaultTableModel model = (DefaultTableModel) tablePesanan.getModel();
            int tempRow = tablePesanan.getSelectedRow();
            Date tgl = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(tempRow, 3));
            inputWaktuPelaksanaan.setDate(tgl);
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }

        if(tablePesanan.getValueAt(row, 4).toString() == null || tablePesanan.getValueAt(row, 4).toString() == "") {
            inputLokasi.setText("");
        } else {
            inputLokasi.setText(tablePesanan.getValueAt(row, 4).toString());
        }

        if(tablePesanan.getValueAt(row, 5) == null) {
            inputPermintaanTambahan.setText("");
        } else {
            inputPermintaanTambahan.setText(tablePesanan.getValueAt(row, 5).toString());
        }

        if(tablePesanan.getValueAt(row, 6).toString() == null || tablePesanan.getValueAt(row, 6).toString() == "") {
            inputBiayaTambahan.setText("");
        } else {
            inputBiayaTambahan.setText(tablePesanan.getValueAt(row, 6).toString());
        }
        
        if (tablePesanan.getValueAt(row, 7).toString() == null || tablePesanan.getValueAt(row, 7).toString() == "") {
            
        } else {
            inputIDTim.setText(tablePesanan.getValueAt(row, 7).toString());
        }
        
        if (tablePesanan.getValueAt(row, 8).toString() == null || tablePesanan.getValueAt(row, 8).toString() == "") {
            
        } else {
            inputUsername.setText(tablePesanan.getValueAt(row, 8).toString());
        }

        if(tablePesanan.getValueAt(row, 9).toString() == null || tablePesanan.getValueAt(row, 9).toString() == "") {
            inputIDAcara.setText("");
        } else {
            inputIDAcara.setText(tablePesanan.getValueAt(row, 9).toString());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBTipeData;
    private javax.swing.JTextField InputPencarian;
    private javax.swing.JButton JBCari;
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bFirst1;
    private javax.swing.JButton bLast1;
    private javax.swing.JButton bNext1;
    private javax.swing.JButton bPrev1;
    private javax.swing.JButton bSave;
    private javax.swing.JButton bUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField inputBiayaTambahan;
    private javax.swing.JTextField inputIDAcara;
    private javax.swing.JTextField inputIDTim;
    private javax.swing.JTextField inputKodePesanan;
    private javax.swing.JTextField inputLokasi;
    private javax.swing.JTextField inputNama;
    private javax.swing.JTextField inputPermintaanTambahan;
    private com.toedter.calendar.JDateChooser inputTanggalPemesanan;
    private javax.swing.JTextField inputUsername;
    private com.toedter.calendar.JDateChooser inputWaktuPelaksanaan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pReport;
    private javax.swing.JTable tablePesanan;
    // End of variables declaration//GEN-END:variables
}
